#ifndef PrjFSCommon_h
#define PrjFSCommon_h

#include <stdint.h>
#include <stdbool.h>

#define PrjFSMaxPath            1024
#define PrjFSKextBundleId       "io.gvfs.PrjFSKext"
#define PrjFSKernelControlName  "io.gvfs.PrjFSKext.ctl"

#define PrjFSServiceClass       "io_gvfs_PrjFS"

// TODO: move this to an autogenerated header.
#define PrjFSKextVersion "0.1"
// Name of property on the main PrjFS IOService indicating the kext version, to be checked by user space
#define PrjFSKextVersionKey "io.gvfs.PrjFSKext.Version"

typedef enum
{
    FileFlags_Invalid = 0,
    
    FileFlags_IsInVirtualizationRoot    = 0x00000008, // UF_OPAQUE
    FileFlags_IsEmpty                   = 0x00000010, // UF_NOUNLINK
    
} FileFlags;

// User client types to be passed to IOServiceOpen.
enum PrjFSServiceUserClientType
{
    UserClientType_Invalid = 0,
    
    UserClientType_Provider,
    UserClientType_Log,
};

enum PrjFS_PerfCounter : int32_t
{
    Probe_VnodeOp = 0,
    Probe_VnodeOp_EarlyOut,
    Probe_VnodeOp_NoVirtualizationRootFlag,
    Probe_VnodeOp_EmptyFlag,
    Probe_VnodeOp_DenyCrawler,
    Probe_VnodeOp_Offline,
    Probe_VnodeOp_Provider,
    Probe_VnodeOp_PopulatePlaceholderDirectory,
    Probe_VnodeOp_HydratePlaceholderFile,
    
    Probe_VnodeOpSplit_EarlyChecks,
    Probe_VnodeOpSplit_ReadFileFlagsSplit,
    Probe_VnodeOpSplit_NoFlagCacheLookup,
    Probe_VnodeOpSplit_FindRootStandard,
    Probe_VnodeOpSplit_FindRootCached,
    
    Probe_VirtualizationRoot_FindIteration,
        
    Probe_VnodeCache_FindRoot,
    Probe_VnodeCache_FindRootFastpathOnly,
    
    Probe_VnodeCacheSplit_FindRootFailedFastpath,
    Probe_VnodeCacheSplit_FindRootTreeWalk,
    Probe_VnodeCacheSplit_FindRootCheckDirsForRoot,
    Probe_VnodeCacheSplit_FindRootUpdateCache,
    Probe_VnodeCacheSplit_FindRootEnd,
    Probe_VnodeCacheSplit_FindRootEndResizeFailed,
        
    Probe_Count,
    
    Probe_None = -1
};

#endif /* PrjFSCommon_h */
